_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
flatten_1 (Flatten)          (None, 1024)              0         
_________________________________________________________________
dense_1 (Dense)              (None, 16)                16400     
_________________________________________________________________
activation_95 (Activation)   (None, 16)                0         
_________________________________________________________________
dense_2 (Dense)              (None, 16)                272       
_________________________________________________________________
activation_96 (Activation)   (None, 16)                0         
_________________________________________________________________
dense_3 (Dense)              (None, 16)                272       
_________________________________________________________________
activation_97 (Activation)   (None, 16)                0         
_________________________________________________________________
dense_4 (Dense)              (None, 6)                 102       
_________________________________________________________________
activation_98 (Activation)   (None, 6)                 0         
=================================================================
Total params: 17,046
Trainable params: 17,046
Non-trainable params: 0
_________________________________________________________________
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
observation_input (InputLayer)  (None, 1, 1024)      0                                            
__________________________________________________________________________________________________
action_input (InputLayer)       (None, 6)            0                                            
__________________________________________________________________________________________________
flatten_2 (Flatten)             (None, 1024)         0           observation_input[0][0]          
__________________________________________________________________________________________________
concatenate_3 (Concatenate)     (None, 1030)         0           action_input[0][0]               
                                                                 flatten_2[0][0]                  
__________________________________________________________________________________________________
dense_5 (Dense)                 (None, 32)           32992       concatenate_3[0][0]              
__________________________________________________________________________________________________
activation_99 (Activation)      (None, 32)           0           dense_5[0][0]                    
__________________________________________________________________________________________________
dense_6 (Dense)                 (None, 32)           1056        activation_99[0][0]              
__________________________________________________________________________________________________
activation_100 (Activation)     (None, 32)           0           dense_6[0][0]                    
__________________________________________________________________________________________________
dense_7 (Dense)                 (None, 32)           1056        activation_100[0][0]             
__________________________________________________________________________________________________
activation_101 (Activation)     (None, 32)           0           dense_7[0][0]                    
__________________________________________________________________________________________________
dense_8 (Dense)                 (None, 1)            33          activation_101[0][0]             
__________________________________________________________________________________________________
activation_102 (Activation)     (None, 1)            0           dense_8[0][0]                    
==================================================================================================
Total params: 35,137
Trainable params: 35,137
Non-trainable params: 0
__________________________________________________________________________________________________

window_length = 1

actor = Sequential()
actor.add(Flatten(input_shape=(1,) + env.observation_space.shape))
actor.add(Dense(16))
actor.add(Activation('relu'))
actor.add(Dense(16))
actor.add(Activation('relu'))
actor.add(Dense(16))
actor.add(Activation('relu'))
actor.add(Dense(nb_actions))
actor.add(Activation('linear'))

action_input = Input(shape=(nb_actions,), name='action_input')
observation_input = Input(shape=(1,) + env.observation_space.shape, name='observation_input')
flattened_observation = Flatten()(observation_input)
x = Concatenate()([action_input, flattened_observation])
x = Dense(32)(x)
x = Activation('relu')(x)
x = Dense(32)(x)
x = Activation('relu')(x)
x = Dense(32)(x)
x = Activation('relu')(x)
x = Dense(1)(x)
x = Activation('linear')(x)
critic = Model(inputs=[action_input, observation_input], outputs=x)

memory = SequentialMemory(limit=100000, window_length=1)
random_process = OrnsteinUhlenbeckProcess(size=nb_actions, theta=.15, mu=0., sigma=.3)

agent = DDPGAgent(nb_actions=nb_actions, actor=actor, critic=critic, critic_action_input=action_input,
                  memory=memory, nb_steps_warmup_critic=100, nb_steps_warmup_actor=100,
                  random_process=random_process, gamma=.99, target_model_update=1e-3)

agent.compile(Adam(lr=.001, clipnorm=1.), metrics=['mae'])

callbacks = [callbacks.TensorBoard(log_dir=tb_folder_path, write_graph=False)]
agent.fit(env, nb_steps=1024, visualize=True, verbose=1, nb_max_episode_steps=512, callbacks=callbacks)

		self.EPISODE_LENGTH = 512
		self.ACTION_LENGTH = 12

		# This is the action space.
		self.action_dict = {
			0: "A",
			1: "Right",
			2: "Left",
			3: "Down",
			4: "B",
			5: ""
		}

		# This is the state
		return current_vector_with_memory_from_ss()

		# The reward is:
		return distance_traveled_between_frames()
